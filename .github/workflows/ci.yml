name: Frontend CI

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21.7.3'

    - name: Cache Node.js modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Compress node_modules
      run: tar -czf node_modules.tar.gz node_modules

    - name: Upload compressed node_modules
      uses: actions/upload-artifact@v3
      with:
        name: node_modules
        path: node_modules.tar.gz

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download compressed node_modules
      uses: actions/download-artifact@v3
      with:
        name: node_modules

    - name: Decompress node_modules
      run: tar -xzf node_modules.tar.gz

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21.7.3'

    - name: Run tests
      run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download compressed node_modules
      uses: actions/download-artifact@v3
      with:
        name: node_modules

    - name: Decompress node_modules
      run: tar -xzf node_modules.tar.gz

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21.7.3'

    - name: Build app
      run: npm run build